[{"C:\\Users\\Anand\\labcolabs-login\\frontend\\src\\index.js":"1","C:\\Users\\Anand\\labcolabs-login\\frontend\\src\\App.js":"2","C:\\Users\\Anand\\labcolabs-login\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Anand\\labcolabs-login\\frontend\\src\\Components\\Appbar.js":"4","C:\\Users\\Anand\\labcolabs-login\\frontend\\src\\Components\\Footer.js":"5","C:\\Users\\Anand\\labcolabs-login\\frontend\\src\\container\\Profile\\Profile.js":"6","C:\\Users\\Anand\\labcolabs-login\\frontend\\src\\container\\Login\\Login.js":"7","C:\\Users\\Anand\\labcolabs-login\\frontend\\src\\container\\Resgister\\Register.js":"8"},{"size":237,"mtime":1608626640550,"results":"9","hashOfConfig":"10"},{"size":655,"mtime":1608661469321,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":3650,"mtime":1608922537642,"results":"13","hashOfConfig":"10"},{"size":339,"mtime":1608633336024,"results":"14","hashOfConfig":"10"},{"size":2927,"mtime":1608921177105,"results":"15","hashOfConfig":"10"},{"size":5026,"mtime":1608921156587,"results":"16","hashOfConfig":"10"},{"size":7882,"mtime":1608921206190,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1un6eqm",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\Anand\\labcolabs-login\\frontend\\src\\index.js",[],["36","37"],"C:\\Users\\Anand\\labcolabs-login\\frontend\\src\\App.js",[],"C:\\Users\\Anand\\labcolabs-login\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Anand\\labcolabs-login\\frontend\\src\\Components\\Appbar.js",[],"C:\\Users\\Anand\\labcolabs-login\\frontend\\src\\Components\\Footer.js",[],"C:\\Users\\Anand\\labcolabs-login\\frontend\\src\\container\\Profile\\Profile.js",["38"],"import { Card, CardContent, Grid } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Profile = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(Number);\r\n  const [date, setDate] = useState(\"\");\r\n  const [loader, setLoader] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"userid\") && !localStorage.getItem(\"googleId\")) {\r\n      window.location.assign(\"http://localhost:5000\");\r\n    } else {\r\n      setName(localStorage.getItem(\"name\"));\r\n      setEmail(localStorage.getItem(\"email\"));\r\n      setAddress(localStorage.getItem(\"address\"));\r\n      setPhoneNumber(localStorage.getItem(\"phonenumber\"));\r\n      setDate(localStorage.getItem(\"dateofbirth\"));\r\n      setLoader(false);\r\n    }\r\n    if (localStorage.getItem(\"googleId\")) {\r\n      setImage(localStorage.getItem(\"image\"));\r\n    }\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        style={{ marginTop: \"5rem\" }}\r\n      >\r\n        {\" \"}\r\n        {loader ? (\r\n          \" \"\r\n        ) : (\r\n          <>\r\n            <Card>\r\n              <CardContent>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"flex-start\"\r\n                  alignItems=\"flex-start\"\r\n                >\r\n                  <img\r\n                    src={\r\n                      image\r\n                        ? image\r\n                        : \"https://i.pinimg.com/originals/0c/3b/3a/0c3b3adb1a7530892e55ef36d3be6cb8.png\"\r\n                    }\r\n                    style={{\r\n                      width: \"5rem\",\r\n                      borderRadius: \"5rem\",\r\n                    }}\r\n                  />\r\n                  <h1 style={{ margin: \"0.5rem\" }}>Welcome</h1>\r\n                </Grid>\r\n                <hr />\r\n                <h4>\r\n                  <b>Name</b>-{\" \"}\r\n                  {name ? name[0].toUpperCase() + name.substring(1) : \" \"}\r\n                </h4>\r\n                <h4>\r\n                  <b>Email</b>- {email ? email : \" \"}\r\n                </h4>\r\n                <h4>\r\n                  <b>Address</b>-{\" \"}\r\n                  {address ? address : \" Google Don't Share THIS\"}\r\n                </h4>\r\n                <h4>\r\n                  <b>Phone Number</b>-{\" \"}\r\n                  {phoneNumber ? phoneNumber : \" Google Don't Share THIS\"}\r\n                </h4>\r\n                <h4>\r\n                  <b>Date of Birth</b>-{\" \"}\r\n                  {date ? date : \" Google Don't Share THIS\"}\r\n                </h4>\r\n              </CardContent>\r\n            </Card>\r\n          </>\r\n        )}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\Anand\\labcolabs-login\\frontend\\src\\container\\Login\\Login.js",[],"C:\\Users\\Anand\\labcolabs-login\\frontend\\src\\container\\Resgister\\Register.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":50,"column":19,"nodeType":"45","endLine":60,"endColumn":21},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]